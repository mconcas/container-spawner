sudo: requires

services:
 - docker

language: python

install: |
  set -x
  git rev-parse HEAD
  sudo pip install -e .
  sudo plancton-bootstrap mconcas/plancton-conf:travis-test

script: |
  set -ex
  dielog() {
    sudo cat $LOGFILE
    return 1
  }
  nosudo() {
    "$@"
  }

  for MODE in sudo nosudo; do
    case $MODE in
      sudo)   PIDFILE=/var/run/plancton.pid
              LOGFILE=/var/log/plancton/plancton.log
              DRAINFILE=/var/run/plancton/drain
              STOPFILE=/var/run/plancton/stop
              CONFIGFILE=/etc/plancton/config.yaml ;;
      nosudo) PIDFILE=$HOME/.plancton/run/plancton.pid
              LOGFILE=$HOME/.plancton/log/plancton.log
              DRAINFILE=$HOME/.plancton/run/drain
              STOPFILE=$HOME/.plancton/run/stop
              CONFIGFILE=$HOME/.plancton/config.yaml;;
    esac

    # Create databases and configuration
    $MODE echo -e "---\ninfluxdb_url:" > $CONFIGFILE
    for i in {1..3}; do
      $MODE echo "  - http://locahost:$(docker run -d -P influxdb | xargs docker port | awk '{print $3}' | cut -d':' -f2)#plancton-monitor" >> $CONFIGFILE
    done

    # Test Plancton startup
    $MODE planctonctl start
    $MODE test -f $PIDFILE || dielog
    $MODE kill -0 $($MODE cat $PIDFILE) || dielog

    # Test Plancton drain mode
    $MODE planctonctl drain
    $MODE test -f $DRAINFILE || dielog
    sleep 40
    $MODE grep -qi "no new containers will be started" $LOGFILE || dielog

    # Test Plancton exiting drain mode
    $MODE planctonctl resume
    ! $MODE test -f $DRAINFILE || dielog

    # Test Plancton force-stop mode
    $MODE planctonctl force-stop
    $MODE grep -qi "not starting containers, killing existing" $LOGFILE || dielog

    # Test Plancton drain and then stop mode
    $MODE planctonctl start
    $MODE test -f $PIDFILE || dielog
    $MODE kill -0 $($MODE cat $PIDFILE) || dielog
    $MODE planctonctl drain-stop
    $MODE test -f $DRAINFILE || dielog
    sleep 40
    $MODE grep -qi "no new containers will be started" $LOGFILE || dielog
    $MODE grep -qi "drain-stop requested" $LOGFILE || dielog
    $MODE test -f $DRAINFILE || dielog
    ! $MODE test -f $STOPFILE || dielog

    # Test Plancton stop
    $MODE planctonctl stop
    ! $MODE test -f $PIDFILE || dielog
  done
